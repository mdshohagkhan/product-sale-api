// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductSaleApi.Models;

#nullable disable

namespace ProductSaleApi.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20250531104119_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductSaleApi.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<bool?>("OnSale")
                        .HasColumnType("bit");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            OnSale = false,
                            Picture = "1.jpg",
                            Price = 1064m,
                            ProductName = "Product1",
                            Size = 3
                        },
                        new
                        {
                            ProductId = 2,
                            OnSale = true,
                            Picture = "2.jpg",
                            Price = 1727m,
                            ProductName = "Product2",
                            Size = 1
                        },
                        new
                        {
                            ProductId = 3,
                            OnSale = false,
                            Picture = "3.jpg",
                            Price = 1304m,
                            ProductName = "Product3",
                            Size = 2
                        },
                        new
                        {
                            ProductId = 4,
                            OnSale = true,
                            Picture = "4.jpg",
                            Price = 1160m,
                            ProductName = "Product4",
                            Size = 1
                        });
                });

            modelBuilder.Entity("ProductSaleApi.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleId"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("SaleId");

                    b.HasIndex("ProductId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            SaleId = 1,
                            Date = new DateTime(2024, 3, 30, 16, 41, 16, 568, DateTimeKind.Local).AddTicks(5082),
                            ProductId = 1,
                            Quantity = 197
                        },
                        new
                        {
                            SaleId = 2,
                            Date = new DateTime(2022, 9, 30, 16, 41, 16, 568, DateTimeKind.Local).AddTicks(5146),
                            ProductId = 1,
                            Quantity = 132
                        },
                        new
                        {
                            SaleId = 3,
                            Date = new DateTime(2021, 12, 27, 16, 41, 16, 568, DateTimeKind.Local).AddTicks(5165),
                            ProductId = 1,
                            Quantity = 199
                        },
                        new
                        {
                            SaleId = 4,
                            Date = new DateTime(2020, 8, 1, 16, 41, 16, 568, DateTimeKind.Local).AddTicks(5182),
                            ProductId = 1,
                            Quantity = 173
                        },
                        new
                        {
                            SaleId = 5,
                            Date = new DateTime(2019, 4, 13, 16, 41, 16, 568, DateTimeKind.Local).AddTicks(5200),
                            ProductId = 5,
                            Quantity = 111
                        },
                        new
                        {
                            SaleId = 6,
                            Date = new DateTime(2018, 5, 8, 16, 41, 16, 568, DateTimeKind.Local).AddTicks(5223),
                            ProductId = 1,
                            Quantity = 184
                        },
                        new
                        {
                            SaleId = 7,
                            Date = new DateTime(2016, 9, 3, 16, 41, 16, 568, DateTimeKind.Local).AddTicks(5242),
                            ProductId = 1,
                            Quantity = 156
                        });
                });

            modelBuilder.Entity("ProductSaleApi.Models.Sale", b =>
                {
                    b.HasOne("ProductSaleApi.Models.Product", "Product")
                        .WithMany("Sales")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductSaleApi.Models.Product", b =>
                {
                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
